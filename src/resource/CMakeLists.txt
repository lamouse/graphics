
set(LIB_RESOURCE_NAME resource)

set (sources
    texture/image.hpp
    texture/image.cpp
    obj/mesh.hpp
    obj/model.hpp
    obj/model.cpp
    obj/particle.hpp
    obj/particle.cpp
    shader/shader.hpp
    shader/shader.cpp
    model_instance.hpp
    model_instance.cpp
    particle_instance.hpp
    particle_instance.cpp
    resource.hpp
    resource.cpp
)

add_library(${LIB_RESOURCE_NAME} STATIC ${sources})
if (MSVC)
    target_compile_options(${LIB_RESOURCE_NAME} PRIVATE
        /we4242 # 'identifier': conversion from 'type1' to 'type2', possible loss of data
        /we4244 # 'conversion': conversion from 'type1' to 'type2', possible loss of data
        /we4245 # 'conversion': conversion from 'type1' to 'type2', signed/unsigned mismatch
        /we4254 # 'operator': conversion from 'type1:field_bits' to 'type2:field_bits', possible loss of data
        /we4800 # Implicit conversion from 'type' to bool. Possible information loss
    )
else()
    target_compile_options(${LIB_RESOURCE_NAME} PRIVATE
        -Werror=conversion

        -Wno-sign-conversion
        -Wno-cast-function-type

        $<$<CXX_COMPILER_ID:Clang>:-fsized-deallocation>
    )
endif()
target_include_directories(${LIB_RESOURCE_NAME} PRIVATE ${SHADER_PATH_INCLUDE})
target_link_libraries(${LIB_RESOURCE_NAME} PRIVATE spdlog::spdlog glm::glm ecs Imgui::Imgui absl::strings)
# 设置动态库/静态库生成路径
set(LIBRARY_OUTPUT_PATH ${LIB_RESOURCE_NAME}/lib)
set_target_properties(${LIB_RESOURCE_NAME} PROPERTIES VERSION 0.0.1 SOVERSION 0)
create_target_directory_groups(${LIB_RESOURCE_NAME})